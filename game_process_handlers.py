# game_process_handlers.py

from telegram import Update
from telegram.ext import ContextTypes, ConversationHandler
from database import (
    get_alive_tokens,
    update_user_on_game,
    get_moderators,
    get_latest_game_set,
    get_token_by_id,
    get_red_tokens,
    update_token_red_neighbors,
    update_token_kill,
    reset_user_game_state
)
from render_game_set import show_game_set
from constants import EXECUTE_TOKEN, GET_RED_TOKEN_RED_NEIGHBORS_IN_GAME, CONFIRM_INVITE, CONFIRM_KILL, SKIP_ENTER_NEIGHBORS
import logging

from player_manager import invite_player
from utils import escape_html

logger = logging.getLogger(__name__)

async def start_game(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–≥—Ä–æ–∫—É –∫–∞—Ä—Ç—É –∂–µ—Ç–æ–Ω–æ–≤ –∏ —É–≤–µ–¥–æ–º–ª—è–µ—Ç –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞.
    """
    user = update.effective_user
    user_id = user.id
    username = user.username or user.first_name or "Unknown"

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–≥—Ä–æ–∫–æ–º
    game_set = get_latest_game_set()
    player_id = game_set.get('player_id')
    player_username = game_set.get('player_username')

    if user_id != player_id:
        # –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –∏–≥—Ä–æ–∫, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        return ConversationHandler.END

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç—É –∂–µ—Ç–æ–Ω–æ–≤ –∏–≥—Ä–æ–∫—É
    await show_game_set(context, player_id, moderator=False)
    logger.info(f"–ò–≥—Ä–æ–∫—É @{player_username} ({player_id}) –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∫–∞—Ä—Ç–∞ –∂–µ—Ç–æ–Ω–æ–≤.")
    update_user_on_game(player_id, True)

    await context.bot.send_message(
        chat_id=player_id,
        text="–í–≤–µ–¥–∏ –Ω–æ–º–µ—Ä –∂–µ—Ç–æ–Ω–∞, –∫–æ—Ç–æ—Ä—ã–π —Ç—ã —Å–æ–±–∏—Ä–∞–µ—à—å—Å—è –∫–∞–∑–Ω–∏—Ç—å:",
        parse_mode='MarkdownV2'
    )

    return EXECUTE_TOKEN

async def execute_token_player(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –∏–≥—Ä–æ–∫–æ–º –Ω–æ–º–µ—Ä–∞ –∂–µ—Ç–æ–Ω–∞.
    """
    user = update.effective_user
    user_id = user.id
    username = user.username or user.first_name or "Unknown"
    text = update.message.text.strip()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–∞ –ª–∏ –≤–≤–µ–¥–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /execute_token
    if text == "/execute_token":
        await update.message.reply_text("–í–≤–µ–¥–∏ –Ω–æ–º–µ—Ä –∂–µ—Ç–æ–Ω–∞, –∫–æ—Ç–æ—Ä—ã–π —Ç—ã —Å–æ–±–∏—Ä–∞–µ—à—å—Å—è –∫–∞–∑–Ω–∏—Ç—å:")
        return EXECUTE_TOKEN

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–≤–µ–¥–µ–Ω–æ —á–∏—Å–ª–æ (–ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /execute_token)
    if not text.isdigit():
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –∂–µ—Ç–æ–Ω–∞ (—Ü–µ–ª–æ–µ —á–∏—Å–ª–æ).")
        return EXECUTE_TOKEN

    token_id = int(text)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∂–µ—Ç–æ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    token = get_token_by_id(token_id)
    if not token:
        await update.message.reply_text(f"–ñ–µ—Ç–æ–Ω —Å –Ω–æ–º–µ—Ä–æ–º {token_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∂–µ—Ç–æ–Ω.")
        return EXECUTE_TOKEN

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∂–µ—Ç–æ–Ω –¥–µ–º–æ–Ω–æ–º
    if token['character'] == 'demon':
        # –°–æ–æ–±—â–µ–Ω–∏–µ –∏–≥—Ä–æ–∫—É –æ –ø–æ–±–µ–¥–µ
        await update.message.reply_text("üèÜ –í—ã –∫–∞–∑–Ω–∏–ª–∏ –¥–µ–º–æ–Ω–∞, –ø–æ–±–µ–¥–∞ —Å–∏–Ω–µ–≥–æ –≥–æ—Ä–æ–¥–∞!")

        # –°–æ–æ–±—â–µ–Ω–∏–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É –æ –ø–æ–±–µ–¥–µ —Å–∏–Ω–∏—Ö
        moderators = get_moderators()
        if moderators:
            moderator = moderators[0]
            moderator_id = moderator['id']
            await context.bot.send_message(
                chat_id=moderator_id,
                text=f"üíÄ –ò–≥—Ä–æ–∫ @{username} –∫–∞–∑–Ω–∏–ª –¥–µ–º–æ–Ω–∞. –ü–æ–±–µ–¥–∞ —Å–∏–Ω–∏—Ö. –ù–∞–∂–º–∏—Ç–µ /start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É –∑–∞–Ω–æ–≤–æ"
            )
            logger.info(f"–ò–≥—Ä–æ–∫ @{username} –∫–∞–∑–Ω–∏–ª –¥–µ–º–æ–Ω–∞. –ü–æ–±–µ–¥–∞ —Å–∏–Ω–∏—Ö –æ–±—ä—è–≤–ª–µ–Ω–∞.")
            reset_user_game_state(user_id)
            reset_user_game_state(moderator_id)
        else:
            logger.warning("–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è.")

        # –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∏–≥—Ä—ã
        return ConversationHandler.END

    # –ï—Å–ª–∏ –∂–µ—Ç–æ–Ω –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –¥–µ–º–æ–Ω–æ–º, –æ–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ —Å—Ç–∞—Ç—É—Å –Ω–∞ "—É–±–∏—Ç"
    update_token_kill(token_id)
    logger.info(f"–ò–≥—Ä–æ–∫ @{username} –≤—ã–±—Ä–∞–ª –¥–ª—è –∫–∞–∑–Ω–∏ –∂–µ—Ç–æ–Ω {token_id}, –∏ –µ–≥–æ —Å—Ç–∞—Ç—É—Å –±—ã–ª –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ '—É–±–∏—Ç'.")
    await show_game_set(context, user_id, moderator=False)
    await update.message.reply_text(f"–ñ–µ—Ç–æ–Ω {token_id} –≤—ã–±—Ä–∞–Ω –¥–ª—è –∫–∞–∑–Ω–∏ –∏ –µ–≥–æ —Å—Ç–∞—Ç—É—Å –æ–±–Ω–æ–≤–ª–µ–Ω. –ñ–¥–µ–º —Ö–æ–¥ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞..")

    moderators = get_moderators()
    if moderators:
        moderator = moderators[0]
        moderator_id = moderator['id']
        message = f"–ò–≥—Ä–æ–∫ @{username} –≤—ã–±—Ä–∞–ª –¥–ª—è –∫–∞–∑–Ω–∏ –∂–µ—Ç–æ–Ω {token_id}."
        try:
            await show_game_set(context, moderator_id, moderator=True)
            await context.bot.send_message(chat_id=moderator_id, text=message)
            logger.info(f"–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –≤—ã–±–æ—Ä–µ –∏–≥—Ä–æ–∫–∞ @{username}.")
        except Exception as e:
            logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É: {e}")
    else:
        logger.warning("–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è.")

    is_red_won = await red_won(context)
    if is_red_won:
        return ConversationHandler.END
    
    context.bot_data['awaiting_red_neighbors'] = True

    await context.bot.send_message(
        chat_id=moderator_id,
        text="/enter_neighbors, –≤–≤–µ—Å—Ç–∏ —Å–æ—Å–µ–¥–µ–π –¥–ª—è –∫—Ä–∞—Å–Ω—ã—Ö –∂–µ—Ç–æ–Ω–æ–≤\n\n"
        "/skip_enter_neighbors, –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —à–∞–≥ –≤—ã–±–æ—Ä–∞ —Å–æ—Å–µ–¥–µ–π –∏ –ø–µ—Ä–µ–π—Ç–∏ –∫ –≤—ã–±–æ–ª—Ä—É –∂–µ—Ç–æ–Ω–∞ –¥–ª—è —É–±–∏–π—Å—Ç–≤–∞",
        parse_mode='HTML'
    )

    return ConversationHandler.END


async def skip_enter_neighbors(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """
    –ü—Ä–æ–ø—É—Å–∫–∞–µ—Ç –≤–≤–æ–¥ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–æ—Å–µ–¥–µ–π –¥–ª—è –∫—Ä–∞—Å–Ω—ã—Ö –∂–µ—Ç–æ–Ω–æ–≤ –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –∫ —ç—Ç–∞–ø—É –≤—ã–±–æ—Ä–∞ –∂–µ—Ç–æ–Ω–∞ –¥–ª—è —É–±–∏–π—Å—Ç–≤–∞.
    """
    await update.message.reply_text("–ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤—ã–±–æ—Ä—É –∂–µ—Ç–æ–Ω–∞ –¥–ª—è —É–±–∏–π—Å—Ç–≤–∞.")
    return await kill_token(update, context)


async def reenter_red_neighbors_for_red(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """
    –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—Ä–∞—Å–Ω—ã—Ö —Å–æ—Å–µ–¥–µ–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫—Ä–∞—Å–Ω–æ–≥–æ –∂–µ—Ç–æ–Ω–∞.
    """
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ–∂–∏–¥–∞–µ—Ç—Å—è –ª–∏ –≤–≤–æ–¥ –∫—Ä–∞—Å–Ω—ã—Ö —Å–æ—Å–µ–¥–µ–π
    if not context.bot_data.get('awaiting_red_neighbors'):
        await update.message.reply_text("–°–µ–π—á–∞—Å –Ω–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –≤–≤–æ–¥–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—Ä–∞—Å–Ω—ã—Ö —Å–æ—Å–µ–¥–µ–π.")
        return ConversationHandler.END

    # –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤—ã–π –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
    if 'red_tokens' not in context.user_data or not context.user_data.get('awaiting_red_neighbors_input'):
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫—Ä–∞—Å–Ω—ã—Ö –∂–µ—Ç–æ–Ω–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        red_tokens = get_red_tokens()
        logger.info(f"Red tokens retrieved: {red_tokens}")

        if not red_tokens:
            await update.message.reply_text("–ù–µ—Ç –∫—Ä–∞—Å–Ω—ã—Ö –∂–µ—Ç–æ–Ω–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏.")
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –≤–≤–æ–¥–∞
            context.bot_data['awaiting_red_neighbors'] = False
            return ConversationHandler.END

        context.user_data['red_tokens'] = red_tokens
        context.user_data['current_red_token_index'] = 0
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥, —á—Ç–æ–±—ã –∑–Ω–∞—Ç—å, —á—Ç–æ –º—ã –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –≤–≤–æ–¥–∞
        context.user_data['awaiting_red_neighbors_input'] = True
        await update.message.reply_text(f"–í–≤–µ–¥–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—Ä–∞—Å–Ω—ã—Ö —Å–æ—Å–µ–¥–µ–π –¥–ª—è –∂–µ—Ç–æ–Ω–∞ –Ω–æ–º–µ—Ä {red_tokens[0]}:")
        return GET_RED_TOKEN_RED_NEIGHBORS_IN_GAME

    # –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –∑–∞–ø—Ä–∞—à–∏–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ
    red_tokens = context.user_data['red_tokens']
    current_index = context.user_data['current_red_token_index']

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –∏–Ω–¥–µ–∫—Å–∞
    if current_index >= len(red_tokens):
        await update.message.reply_text("–í—Å–µ –∫—Ä–∞—Å–Ω—ã–µ –∂–µ—Ç–æ–Ω—ã —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã.")
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥–∏
        context.bot_data['awaiting_red_neighbors'] = False
        context.user_data.pop('awaiting_red_neighbors_input', None)
        context.user_data.pop('red_tokens', None)
        context.user_data.pop('current_red_token_index', None)

        # –ó–∞–≤–µ—Ä—à–∏–ª–∏ –≤–≤–æ–¥ —Å–æ—Å–µ–¥–µ–π, —Ç–µ–ø–µ—Ä—å –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É —É–±–∏—Ç—å –∂–µ—Ç–æ–Ω
        return await kill_token(update, context)

    token_number = red_tokens[current_index]

    red_neighbors_text = update.message.text.strip()
    if not red_neighbors_text.isdigit():
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –¥–ª—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–æ—Å–µ–¥–µ–π.")
        return GET_RED_TOKEN_RED_NEIGHBORS_IN_GAME

    red_neighbors = int(red_neighbors_text)

    # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª–µ red_neighbors –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –∫—Ä–∞—Å–Ω–æ–≥–æ –∂–µ—Ç–æ–Ω–∞
    update_token_red_neighbors(token_number, red_neighbors)
    logger.info(f"–ñ–µ—Ç–æ–Ω {token_number}: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Å–µ–¥–µ–π –æ–±–Ω–æ–≤–ª–µ–Ω–æ –¥–æ {red_neighbors}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –µ—â—ë –∫—Ä–∞—Å–Ω—ã–µ –∂–µ—Ç–æ–Ω—ã –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
    current_index += 1
    context.user_data['current_red_token_index'] = current_index

    if current_index < len(red_tokens):
        next_token_number = red_tokens[current_index]
        await update.message.reply_text(f"–í–≤–µ–¥–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—Ä–∞—Å–Ω—ã—Ö —Å–æ—Å–µ–¥–µ–π –¥–ª—è –∂–µ—Ç–æ–Ω–∞ –Ω–æ–º–µ—Ä {next_token_number}:")
        return GET_RED_TOKEN_RED_NEIGHBORS_IN_GAME
    else:
        # –í—Å–µ –¥–∞–Ω–Ω—ã–µ –≤–≤–µ–¥–µ–Ω—ã, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—É—é —Ä–∞—Å–∫–ª–∞–¥–∫—É
        await update.message.reply_text("–í–≤–æ–¥ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫—Ä–∞—Å–Ω—ã—Ö —Å–æ—Å–µ–¥–µ–π –∑–∞–≤–µ—Ä—à—ë–Ω.")
        player_id = get_latest_game_set().get('player_id')

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—É—é —Ä–∞—Å–∫–ª–∞–¥–∫—É –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É
        await show_game_set(context, update.effective_user.id, moderator=True)

        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥–∏ –∏ –æ—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        context.bot_data['awaiting_red_neighbors'] = False
        context.user_data.pop('awaiting_red_neighbors_input', None)
        context.user_data.pop('red_tokens', None)
        context.user_data.pop('current_red_token_index', None)

        # –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Ñ—É–Ω–∫—Ü–∏–∏ kill_token –¥–ª—è –≤—ã–±–æ—Ä–∞ –∂–µ—Ç–æ–Ω–∞ –Ω–∞ —É–±–∏–π—Å—Ç–≤–æ
        return await kill_token(update, context)

async def kill_token(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """
    –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –≤—ã–±–æ—Ä –∂–µ—Ç–æ–Ω–∞ –¥–ª—è —É–±–∏–π—Å—Ç–≤–∞.
    """
    await update.message.reply_text("–í—ã–±–µ—Ä–∏ –∂–µ—Ç–æ–Ω –¥–ª—è —É–±–∏–π—Å—Ç–≤–∞, –≤–≤–µ–¥—è –µ–≥–æ –Ω–æ–º–µ—Ä:")
    return CONFIRM_KILL

async def confirm_kill(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –Ω–æ–º–µ—Ä–∞ –∂–µ—Ç–æ–Ω–∞ –¥–ª—è —É–±–∏–π—Å—Ç–≤–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º.
    """
    text = update.message.text.strip()
    if not text.isdigit():
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –∂–µ—Ç–æ–Ω–∞ (—Ü–µ–ª–æ–µ —á–∏—Å–ª–æ).")
        return CONFIRM_KILL  # –û—Å—Ç–∞–µ–º—Å—è –≤ —ç—Ç–æ–º –∂–µ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –≤–≤–æ–¥–∞

    token_id = int(text)

    token = get_token_by_id(token_id)
    if not token:
        await update.message.reply_text(f"–ñ–µ—Ç–æ–Ω —Å –Ω–æ–º–µ—Ä–æ–º {token_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∂–µ—Ç–æ–Ω.")
        return CONFIRM_KILL

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∂–µ—Ç–æ–Ω –¥–µ–º–æ–Ω–æ–º
    if token['character'] == 'demon':
        # –°–æ–æ–±—â–µ–Ω–∏–µ –∏–≥—Ä–æ–∫—É –æ —Ç–æ–º, —á—Ç–æ –¥–µ–º–æ–Ω–∞ —É–±–∏–ª–∏
        game_set = get_latest_game_set()
        player_id = game_set.get('player_id')
        
        await show_game_set(context, player_id, moderator=True)
        await context.bot.send_message(
            chat_id=player_id,
            text="üèÜ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä –∑–∞—á–µ–º-—Ç–æ —É–±–∏–ª –¥–µ–º–æ–Ω–∞, –ø–æ–±–µ–¥–∞ —Å–∏–Ω–µ–≥–æ –≥–æ—Ä–æ–¥–∞!"
        )

        await update.message.reply_text(
            "üíÄ –¢—ã –∑–∞—á–µ–º-—Ç–æ —É–±–∏–ª –¥–µ–º–æ–Ω–∞. –ß—Ç–æ –∂, —ç—Ç–æ –ø–æ–±–µ–¥–∞ —Å–∏–Ω–µ–≥–æ –≥–æ—Ä–æ–¥–∞.\n"
            "/start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É –∑–∞–Ω–æ–≤–æ"
        )
        logger.info(f"–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä —É–±–∏–ª –¥–µ–º–æ–Ω–∞ (–∂–µ—Ç–æ–Ω {token_id}). –ü–æ–±–µ–¥–∞ —Å–∏–Ω–µ–≥–æ –≥–æ—Ä–æ–¥–∞.")
        
        reset_user_game_state(player_id)
        moderator_id = update.effective_user.id
        reset_user_game_state(moderator_id)

        return ConversationHandler.END

    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∂–µ—Ç–æ–Ω–∞ –Ω–∞ "—É–±–∏—Ç"
    update_token_kill(token_id)
    logger.info(f"–ñ–µ—Ç–æ–Ω {token_id} –≤—ã–±—Ä–∞–Ω –¥–ª—è —É–±–∏–π—Å—Ç–≤–∞ –∏ –ø–æ–º–µ—á–µ–Ω –∫–∞–∫ —É–±–∏—Ç.")
    await update.message.reply_text(f"–ñ–µ—Ç–æ–Ω {token_id} –≤—ã–±—Ä–∞–Ω –¥–ª—è —É–±–∏–π—Å—Ç–≤–∞ –∏ –µ–≥–æ —Å—Ç–∞—Ç—É—Å –æ–±–Ω–æ–≤–ª–µ–Ω.")
    await show_game_set(context, update.effective_user.id, moderator=True)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å –ª–∏ –∏–≥—Ä–∞ –ø–æ–±–µ–¥–æ–π –∫—Ä–∞—Å–Ω—ã—Ö
    is_red_won = await red_won(context)
    
    if is_red_won:
        return ConversationHandler.END

    return await invite_player(update, context)

async def red_won(context: ContextTypes.DEFAULT_TYPE) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –æ—Å—Ç–∞–ª–∏—Å—å –ª–∏ –≤ –∏–≥—Ä–µ –¥–≤–∞ –∏–ª–∏ –º–µ–Ω—å—à–µ –∂–µ—Ç–æ–Ω–æ–≤, –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç True, –µ—Å–ª–∏ –ø–æ–±–µ–¥–∞ –∫—Ä–∞—Å–Ω—ã—Ö.
    """
    alive_tokens = get_alive_tokens()  # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∂–∏–≤—ã—Ö –∂–µ—Ç–æ–Ω–æ–≤

    if len(alive_tokens) <= 2:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º –∏–≥—Ä–æ–∫–µ –∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–µ
        game_set = get_latest_game_set()
        player_id = game_set.get('player_id')

        moderators = get_moderators()
        if moderators:
            moderator = moderators[0]
            moderator_id = moderator['id']

            await show_game_set(context, moderator_id, moderator=True)
            await context.bot.send_message(
                chat_id=moderator_id,
                text="üî• –í –∏–≥—Ä–µ –æ—Å—Ç–∞–ª–æ—Å—å –≤—Å–µ–≥–æ 2 –∂–µ—Ç–æ–Ω–∞, —ç—Ç–æ –ø–æ–±–µ–¥–∞ –∫—Ä–∞—Å–Ω—ã—Ö!\n\n/start —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ",
                parse_mode='HTML'
            )

            await show_game_set(context, player_id, moderator=True)
            await context.bot.send_message(
                chat_id=player_id,
                text="üòû –¢—ã —Ç–∞–∫ –∏ –Ω–µ —É–±–∏–ª –¥–µ–º–æ–Ω–∞, —ç—Ç–æ –ø–æ–±–µ–¥–∞ –∫—Ä–∞—Å–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞ ü´†"
            )

            logger.info("–û–±—ä—è–≤–ª–µ–Ω–∞ –ø–æ–±–µ–¥–∞ –∫—Ä–∞—Å–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞, –æ—Å—Ç–∞–ª–æ—Å—å 2 –∏–ª–∏ –º–µ–Ω—å—à–µ –∂–µ—Ç–æ–Ω–æ–≤.")
        
        return True

    return False
